#!/usr/bin/env bash
#
# Matilda Installer - Encrypted Self-Extracting Executable
# This file contains an encrypted installation script
#
# DO NOT MODIFY THIS FILE
#

set -e

# Verify execution environment
if [ -z "$BASH_VERSION" ]; then
    echo "Error: This script requires bash" >&2
    exit 1
fi

# Temporary directory for extraction
TEMP_DIR=$(mktemp -d -t matilda_installer.XXXXXXXXXX)
trap 'rm -rf "$TEMP_DIR"' EXIT

# Encoded script data (DO NOT MODIFY)
ENCODED_DATA="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"

# Extract and execute
extract_and_run() {
    local temp_script="$TEMP_DIR/installer.sh"

    # Decode and decompress
    echo "$ENCODED_DATA" | base64 -d | gunzip > "$temp_script"

    if [ ! -f "$temp_script" ]; then
        echo "Error: Failed to extract installer" >&2
        exit 1
    fi

    # Make executable
    chmod +x "$temp_script"

    # Execute with all arguments
    exec bash "$temp_script" "$@"
}

# Run the extracted script
extract_and_run "$@"
