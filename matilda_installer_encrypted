#!/usr/bin/env bash
#
# Matilda Installer - Encrypted Self-Extracting Executable
# This file contains an encrypted installation script
#
# DO NOT MODIFY THIS FILE
#

set -e

# Verify execution environment
if [ -z "$BASH_VERSION" ]; then
    echo "Error: This script requires bash" >&2
    exit 1
fi

# Temporary directory for extraction
TEMP_DIR=$(mktemp -d -t matilda_installer.XXXXXXXXXX)
trap 'rm -rf "$TEMP_DIR"' EXIT

# Encoded script data (DO NOT MODIFY)
ENCODED_DATA=""

# Extract and execute
extract_and_run() {
    local temp_script="$TEMP_DIR/installer.sh"

    # Decode and decompress
    echo "$ENCODED_DATA" | base64 -d | gunzip > "$temp_script"

    if [ ! -f "$temp_script" ]; then
        echo "Error: Failed to extract installer" >&2
        exit 1
    fi

    # Make executable
    chmod +x "$temp_script"

    # Execute with all arguments
    exec bash "$temp_script" "$@"
}

# Run the extracted script
extract_and_run "$@"
